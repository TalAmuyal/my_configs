# History file
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt appendhistory

# Auto 'cd'
setopt autocd

# TODO: Verify meaning
setopt nomatch
unsetopt extendedglob notify

# Use Vim keybindings
# bindkey -v - Not needed anymove since I run my shell inside Neovim

# Bind Ctrl+R to history search
bindkey '^R' history-incremental-search-backward

# Load prompt theme system
autoload -Uz promptinit
promptinit

# === Customize prompt ===
# Turn on parameter expansion on prompt
setopt PROMPT_SUBST

INITIAL_WD="$(pwd -P)"

function get_custom_path {
	p="$(pwd -P)"
	home="$(cd ~ && pwd -P)"
	if [[ "$p" == "$home" ]] ; then
		p="Home"
	elif [[ "$p" == "$home/dev" ]] ; then
		p="Dev"
	elif [[ $p == $home/dev/* ]] ; then
		prefix="$home/dev/"
		p=${p:${#prefix}}
	elif [[ "$p" == "$home/workspace" ]] ; then
		p="Workspace"
	elif [[ $p == $home/workspace/* ]] ; then
		prefix="$home/workspace/"
		p=${p:${#prefix}}
	elif [[ $p == $INITIAL_WD ]] ; then
		p=""
	elif [[ $p == $INITIAL_WD/* ]] ; then
		prefix="$INITIAL_WD/"
		p=${p:${#prefix}}
	fi

	if [[ $p == $HOME* ]]; then
		p="~${p#$HOME}"
	fi

	echo -n $p
}

function prompt_git {
	git branch >/dev/null 2>/dev/null
	if [[ $? -eq 0 ]];then
		git rev-parse --abbrev-ref HEAD | tr -d '\n'
	else
		echo -n '(None)'
	fi
}

function prompt_path {
	echo -n '%~'
}

function prompt_start {
	echo -n '%K{blue}%F{white} '
}

function prompt_seperate {
	# $1 = Old BG color
	# $2 = New BG color
	# $3 = New text color
	#echo -n ' %f%k%F{'$1'}%K{'$2'}\u25B6 %f%F{'$3'}'
	echo -n ' %f%k%K{'$2'}%f%F{'$3'} '
}

function prompt_terminate {
	echo -n ' %f%k'
}

function set_tmux_title {
	printf "\033k$1\033\\"
}

function set_window_title {
	echo -en "\e]0;$1\a" # Set icon name and window title
}

function prompt_left {
	custom_path=$(get_custom_path)

	prompt_start
	echo -n $custom_path
	prompt_terminate

	echo -n $' > '
}

PROMPT='$(prompt_left)'

# === ===

ASDF_VM_DIR=$HOME/.local/asdf
[[ -e "$ASDF_VM_DIR" ]] && source $ASDF_VM_DIR/asdf.sh && fpath=(${ASDF_VM_DIR}/completions $fpath)
unset ASDF_VM_DIR

# Command completion
autoload -Uz compinit
compinit

function isOsx() {
	[[ `uname` == "Darwin" ]]
}

isLinux() {
	[[ `uname` == "Linux" ]]
}

# Aliases
alias -g G="| egrep"
alias -g Gv="G -v"
alias -g C="clear &&"
alias -g H="--help | less"

alias vim="nvim"
alias ncdu="ncdu --color dark -rr -x"

if hash exa 2>/dev/null; then
	alias ls='exa'
	alias ll='exa -l'
	alias la='exa -la'
else
	if isOsx ; then
		alias ll="ls -lAFhtr"
	else
		alias ls='ls --color=auto'
		alias ll="ls -lAFhtr --color"
	fi
fi

alias rrr='source ~/.zshrc'

alias grep='grep --color=auto'

alias gcb='git checkout'
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias grs='git rebase --skip'

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

if isLinux ; then
	# -F - Causes less to automatically exit if the entire file can be displayed on the first screen
	# -X - Disables sending the termcap initialization and deinitialization strings to the terminal (stops less clearing the screen)
	# -R - Accept escape sequences (like colors)
	export LESS="-RFX"
fi

export VISUAL=nvim
export EDITOR="$VISUAL"

export PIP_REQUIRE_VIRTUALENV=true

emulate sh -c 'source ~/.profile'

[[ -f .venv/bin/activate ]] && source .venv/bin/activate
[[ -e ~/.nix-profile/etc/profile.d/nix.sh ]] && source ~/.nix-profile/etc/profile.d/nix.sh # added by Nix installer
